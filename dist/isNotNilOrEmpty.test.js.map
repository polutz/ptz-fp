{"version":3,"sources":["../dist-esnext/isNotNilOrEmpty.test.js"],"names":["P","describe","it","isNotNilOrEmpty","undefined"],"mappings":";;AAAA;;AACA;;IAAYA,C;;;;AACZC,SAAS,iBAAT,EAA4B,YAAM;AAC9BC,OAAG,gBAAH,EAAqB,YAAM;AACvB,8BAAMF,EAAEG,eAAF,CAAkB,IAAlB,CAAN;AACH,KAFD;AAGAD,OAAG,qBAAH,EAA0B,YAAM;AAC5B,8BAAMF,EAAEG,eAAF,CAAkBC,SAAlB,CAAN;AACH,KAFD;AAGAF,OAAG,iBAAH,EAAsB,YAAM;AACxB,8BAAMF,EAAEG,eAAF,CAAkB,EAAlB,CAAN;AACH,KAFD;AAGAD,OAAG,oBAAH,EAAyB,YAAM;AAC3B,2BAAGF,EAAEG,eAAF,CAAkB,CAAC,CAAD,CAAlB,CAAH;AACH,KAFD;AAGAD,OAAG,2BAAH,EAAgC,YAAM;AAClC,2BAAGF,EAAEG,eAAF,CAAkB,GAAlB,CAAH;AACH,KAFD;AAGH,CAhBD;AAiBA","file":"isNotNilOrEmpty.test.js","sourcesContent":["import { notOk, ok } from 'ptz-assert';\nimport * as P from './index';\ndescribe('isNotNilOrEmpty', () => {\n    it('false for null', () => {\n        notOk(P.isNotNilOrEmpty(null));\n    });\n    it('false for undefined', () => {\n        notOk(P.isNotNilOrEmpty(undefined));\n    });\n    it('false for empty', () => {\n        notOk(P.isNotNilOrEmpty([]));\n    });\n    it('true for NOT empty', () => {\n        ok(P.isNotNilOrEmpty([1]));\n    });\n    it('true for NOT empty string', () => {\n        ok(P.isNotNilOrEmpty('a'));\n    });\n});\n//# sourceMappingURL=isNotNilOrEmpty.test.js.map"]}